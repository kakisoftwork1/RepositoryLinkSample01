name: Synchronize Target Repository
on: [push]
# on:
#   push:
#     branches:
#       - develop
  # pull_request:
  #   types: [closed]
env:
  MY_ACCOUNT_NAME: kakisoftwork1                                     # 
  TARGET_REPOSITORY_NAME: RepositoryLinkSample02                     # 同期対象のリポジトリ（末尾に ".git" は不要） ※clone先のディレクトリ名としても使用します
  SOURCE_DIRECTORY: core/APISpecifications                           # コピー元のファイルを存在するディレクトリパス
  TARGET_OPAN_API_FILE: petstore.yaml                                # OpenAPI仕様書のファイル名（コピー対象のファイル名）
  DESTINATION_DIRECTORY: RepositoryLinkSample02/APISpecifications    # コピー先（同期先）のファイルを格納するディレクトリ
  USER_NAME : Your Name                                              # git push時のユーザ名
  USER_EMAIL : your.email@example.com                                # git push時のメールアドレス
jobs:
    #===================================
    #   異なるリポジトリとファイルを同期
    #===================================
    synchronize-target-repository:
      runs-on: ubuntu-22.04
      steps:
      - name: Checkout My Repository
        uses: actions/checkout@v4

      # 変更が無い場合、処理を終了する
      - name: Check for changes
        id: is_editted
        run: |
            diff petstore.yaml petstore2.yaml > /dev/null
            if [ $? -eq 0 ]; then
                echo "0"  # 差分が無かった場合
            else
                echo "1"  # 差分があった場合
            fi

      # # 変更がある場合、同期先のリポジトリに pushする
      # - name: Commit and push changes
      #   # if: steps.is_editted.outputs.result == 'Changes detected'
      #   run: |
      #       echo "steps.is_editted.outputs.result - ${{ steps.is_editted.outputs.result }}"
      #       echo "steps.is_editted.outputs.VALUE - ${{ steps.is_editted.outputs.VALUE }}"
